// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/v1/enum.proto

package commonv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterProvider int32

const (
	RegisterProvider_UnknownProvider  RegisterProvider = 0
	RegisterProvider_EmailProvider    RegisterProvider = 1
	RegisterProvider_LineProvider     RegisterProvider = 2
	RegisterProvider_FacebookProvider RegisterProvider = 3
)

var RegisterProvider_name = map[int32]string{
	0: "UnknownProvider",
	1: "EmailProvider",
	2: "LineProvider",
	3: "FacebookProvider",
}

var RegisterProvider_value = map[string]int32{
	"UnknownProvider":  0,
	"EmailProvider":    1,
	"LineProvider":     2,
	"FacebookProvider": 3,
}

func (x RegisterProvider) String() string {
	return proto.EnumName(RegisterProvider_name, int32(x))
}

func (RegisterProvider) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28c66df01a3ec082, []int{0}
}

type T int32

const (
	T_OK                              T = 0
	T_MissingCredentials              T = 400001
	T_SocialProfileHasAlreadyBeenUsed T = 400002
	T_DefaultIdentityNotFound         T = 500001
)

var T_name = map[int32]string{
	0:      "OK",
	400001: "MissingCredentials",
	400002: "SocialProfileHasAlreadyBeenUsed",
	500001: "DefaultIdentityNotFound",
}

var T_value = map[string]int32{
	"OK":                              0,
	"MissingCredentials":              400001,
	"SocialProfileHasAlreadyBeenUsed": 400002,
	"DefaultIdentityNotFound":         500001,
}

func (x T) String() string {
	return proto.EnumName(T_name, int32(x))
}

func (T) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28c66df01a3ec082, []int{1}
}

func init() {
	proto.RegisterEnum("sparkle.common.v1.RegisterProvider", RegisterProvider_name, RegisterProvider_value)
	proto.RegisterEnum("sparkle.common.v1.T", T_name, T_value)
}

func init() { proto.RegisterFile("common/v1/enum.proto", fileDescriptor_28c66df01a3ec082) }

var fileDescriptor_28c66df01a3ec082 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xd0, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0xf0, 0xb6, 0x48, 0x1d, 0x4e, 0x20, 0x5c, 0x53, 0x89, 0x2e, 0xc0, 0xc4, 0xd2, 0xa1,
	0x56, 0x55, 0x31, 0x31, 0x51, 0xa0, 0x02, 0xf1, 0x57, 0x40, 0x17, 0x36, 0x27, 0xb9, 0x84, 0x53,
	0x1c, 0x5f, 0x64, 0x3b, 0x81, 0x8e, 0xf0, 0x26, 0x3c, 0x44, 0x5f, 0x80, 0x27, 0x43, 0x6d, 0x21,
	0xdb, 0xe9, 0x77, 0x3a, 0x9d, 0xbe, 0x0f, 0xfa, 0x31, 0x17, 0x05, 0x5b, 0x55, 0x8f, 0x15, 0xda,
	0xaa, 0x18, 0x95, 0x8e, 0x03, 0xcb, 0x9e, 0x2f, 0xb5, 0xcb, 0x0d, 0x8e, 0x36, 0xdb, 0x51, 0x3d,
	0x1e, 0x46, 0x20, 0x9e, 0x30, 0x23, 0x1f, 0xd0, 0x3d, 0x3a, 0xae, 0x29, 0x41, 0x27, 0xf7, 0x60,
	0x77, 0x6e, 0x73, 0xcb, 0xef, 0xf6, 0x9f, 0x44, 0x4b, 0xf6, 0x60, 0xe7, 0xb2, 0xd0, 0x64, 0x1a,
	0x6a, 0x4b, 0x01, 0xdb, 0xb7, 0x64, 0xb1, 0x91, 0x8e, 0xec, 0x83, 0x98, 0xe9, 0x18, 0x23, 0xe6,
	0xbc, 0xd1, 0xad, 0x61, 0x0e, 0xed, 0x17, 0xd9, 0x85, 0xce, 0xc3, 0x8d, 0x68, 0xc9, 0x01, 0xc8,
	0x3b, 0xf2, 0x9e, 0x6c, 0x76, 0xee, 0x30, 0x41, 0x1b, 0x48, 0x1b, 0x2f, 0x3e, 0x97, 0x03, 0x79,
	0x0c, 0x47, 0xcf, 0x1c, 0x93, 0x5e, 0xbd, 0x48, 0xc9, 0xe0, 0x95, 0xf6, 0x67, 0xc6, 0xa1, 0x4e,
	0x16, 0x53, 0x44, 0x3b, 0xf7, 0x98, 0x88, 0xaf, 0xe5, 0x40, 0x1e, 0xc0, 0xfe, 0x05, 0xa6, 0xba,
	0x32, 0xe1, 0x7a, 0x7d, 0x1e, 0x16, 0xf7, 0x1c, 0x66, 0x5c, 0xd9, 0x44, 0x7c, 0xff, 0x1c, 0x4e,
	0x4f, 0x5e, 0x27, 0x19, 0x85, 0xb7, 0x2a, 0x5a, 0x85, 0x54, 0x1c, 0x07, 0x4e, 0xf9, 0x83, 0x58,
	0xfd, 0x45, 0x57, 0x65, 0x9e, 0xa9, 0xa6, 0x9c, 0xd3, 0xcd, 0x54, 0x8f, 0xa3, 0xee, 0xba, 0xa1,
	0xc9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xfe, 0x8b, 0xbf, 0x39, 0x01, 0x00, 0x00,
}
